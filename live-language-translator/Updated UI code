import React, { useState, useRef } from "react";
import axios from "axios";
import SpeechToText from "speech-to-text"; // Importing speech-to-text library

// Helper function to convert speech to text (using Web Speech API)
const recordSpeech = async (setText) => {
    const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
    recognition.lang = "en-US"; // default source language, you can change this based on user selection
    recognition.start();

    recognition.onresult = (event) => {
        const transcript = event.results[0][0].transcript;
        setText((prevText) => prevText + " " + transcript);
    };

    recognition.onerror = (error) => {
        console.error("Speech recognition error:", error);
    };
};

// Function to handle audio file processing and extract text
const extractTextFromAudioFile = (file, sourceLanguage, setText) => {
    if (!file) return;

    const reader = new FileReader();
    reader.onloadend = () => {
        const audioBuffer = reader.result;
        SpeechToText.recognize(audioBuffer, { sampleRate: 16000, lang: sourceLanguage }, (err, text) => {
            if (err) {
                console.error("Error extracting text from audio file:", err);
            } else {
                setText(text); // Set extracted text from audio
            }
        });
    };
    reader.readAsArrayBuffer(file);
};

const SpeechToTextApp = () => {
    const [text, setText] = useState(""); // Extracted text
    const [translatedText, setTranslatedText] = useState(""); // Translated text
    const [sourceLanguage, setSourceLanguage] = useState("en"); // Source language for speech recognition
    const [selectedLanguage, setSelectedLanguage] = useState("en"); // Default to English
    const [audioFile, setAudioFile] = useState(null); // Audio file for upload
    const audioFileInputRef = useRef(null);

    const handleFileUpload = (event) => {
        const file = event.target.files[0];
        setAudioFile(file);
        // Extract text from the uploaded audio file based on source language
        extractTextFromAudioFile(file, sourceLanguage, setText);
    };

    const translateText = async () => {
        if (!text) return;

        try {
            const response = await axios.post(
                "https://libretranslate.com/translate", // Your translation service URL
                {
                    q: text,
                    source: sourceLanguage, // Pass the source language for translation
                    target: selectedLanguage,
                    format: "text",
                },
                {
                    headers: { "Content-Type": "application/json" },
                }
            );

            setTranslatedText(response.data.translatedText);
        } catch (error) {
            console.error("Translation Error:", error);
        }
    };

    return (
        <div className="min-h-screen bg-gray-100 flex items-center justify-center p-6">
            <div className="w-full max-w-4xl bg-white shadow-lg rounded-xl p-8 space-y-8">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
                    {/* Left Side: Upload/Record and Language Selection */}
                    <div className="space-y-6">
                        {/* Upload Audio Section */}
                        <div className="p-6 bg-blue-50 rounded-lg shadow-lg">
                            <h2 className="text-2xl font-semibold text-blue-700 mb-4">Upload Audio File</h2>
                            <input
                                type="file"
                                accept="audio/*"
                                ref={audioFileInputRef}
                                onChange={handleFileUpload}
                                className="w-full p-3 border-2 border-blue-200 rounded-lg"
                            />
                        </div>

                        {/* Record Speech Section */}
                        <div className="p-6 bg-green-50 rounded-lg shadow-lg">
                            <h2 className="text-2xl font-semibold text-green-700 mb-4">Record Speech</h2>
                            <button
                                onClick={() => recordSpeech(setText)}
                                className="px-6 py-3 bg-green-500 text-white rounded-lg hover:bg-green-600 transition duration-300"
                            >
                                Start Recording
                            </button>
                        </div>

                        {/* Language Dropdowns: Source and Target Language */}
                        <div className="space-y-4">
                            {/* Source Language */}
                            <div>
                                <label className="text-lg font-medium text-gray-700">Select Source Language:</label>
                                <select
                                    className="w-full p-3 border-2 border-gray-300 rounded-lg"
                                    value={sourceLanguage}
                                    onChange={(e) => setSourceLanguage(e.target.value)}
                                >
                                    <option value="en">English</option>
                                    <option value="fr">French</option>
                                    <option value="de">German</option>
                                    <option value="es">Spanish</option>
                                    <option value="hi">Hindi</option>
                                    <option value="zh">Chinese</option>
                                    <option value="ar">Arabic</option>
                                </select>
                            </div>

                            {/* Target Language */}
                            <div>
                                <label className="text-lg font-medium text-gray-700">Select Target Language:</label>
                                <select
                                    className="w-full p-3 border-2 border-gray-300 rounded-lg"
                                    value={selectedLanguage}
                                    onChange={(e) => setSelectedLanguage(e.target.value)}
                                >
                                    <option value="en">English</option>
                                    <option value="fr">French</option>
                                    <option value="de">German</option>
                                    <option value="es">Spanish</option>
                                    <option value="hi">Hindi</option>
                                    <option value="zh">Chinese</option>
                                    <option value="ar">Arabic</option>
                                </select>
                            </div>

                            <button
                                onClick={translateText}
                                className="mt-6 px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition duration-300"
                            >
                                Translate
                            </button>
                        </div>
                    </div>

                    {/* Right Side: Extracted Text and Translated Text */}
                    <div className="space-y-6">
                        {/* Extracted Text Display */}
                        <div className="p-6 bg-white rounded-lg shadow-lg">
                            <h2 className="text-2xl font-semibold text-gray-700 mb-4">Extracted Text</h2>
                            <textarea
                                className="w-full p-3 border-2 border-gray-300 rounded-lg"
                                rows="6"
                                value={text}
                                onChange={(e) => setText(e.target.value)}
                                placeholder="The extracted text from the audio will appear here..."
                            />
                        </div>

                        {/* Translated Text Display */}
                        <div className="p-6 bg-blue-100 rounded-lg shadow-lg">
                            <h2 className="text-2xl font-semibold text-blue-700 mb-4">Translated Text</h2>
                            <textarea
                                className="w-full p-3 border-2 border-blue-300 rounded-lg"
                                rows="6"
                                value={translatedText}
                                readOnly
                                placeholder="The translated text will appear here..."
                            />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default SpeechToTextApp;
